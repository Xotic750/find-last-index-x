{"version":3,"sources":["../src/find-last-index-x.js"],"names":[],"mappings":"AAAA,OAAO,QAAP,MAAqB,aAArB;AACA,OAAO,QAAP,MAAqB,aAArB;AACA,OAAO,gBAAP,MAA6B,sBAA7B;AACA,OAAO,eAAP,MAA4B,sBAA5B;AAEA;;;;;;;;;;;;;;AAaA,IAAM,aAAa,GAAG,SAAS,aAAT,CAAuB,KAAvB,EAA8B,QAA9B,EAAwC,OAAxC,EAAiD;AACrE,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAD,CAAvB;AACA,EAAA,gBAAgB,CAAC,QAAD,CAAhB;AACA,MAAM,QAAQ,GAAG,eAAe,CAAC,MAAD,CAAhC;AACA,MAAI,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAV,CAAR,GAA4B,CAAxC;;AAEA,MAAI,KAAK,GAAG,CAAZ,EAAe;AACb,WAAO,CAAC,CAAR;AACD;;AAED,SAAO,KAAK,GAAG,CAAC,CAAhB,EAAmB;AACjB,QAAI,QAAQ,CAAC,IAAT,CAAc,OAAd,EAAuB,QAAQ,CAAC,KAAD,CAA/B,EAAwC,KAAxC,EAA+C,MAA/C,CAAJ,EAA4D;AAC1D,aAAO,KAAP;AACD;;AAED,IAAA,KAAK,IAAI,CAAT;AACD;;AAED,SAAO,CAAC,CAAR;AACD,CAnBD;;AAqBA,eAAe,aAAf","file":"find-last-index-x.esm.js","sourcesContent":["import toLength from 'to-length-x';\nimport toObject from 'to-object-x';\nimport assertIsFunction from 'assert-is-function-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\n\n/**\n * Like `findIndex`, this method returns an index in the array, if an element\n * in the array satisfies the provided testing function, except it is peformed\n * in reverse. Otherwise -1 is returned.\n *\n * @param {Array} array - The array to search.\n * @throws {TypeError} If array is `null` or `undefined`-.\n * @param {Function} callback - Function to execute on each value in the array,\n *  taking three arguments: `element`, `index` and `array`.\n * @throws {TypeError} If `callback` is not a function.\n * @param {*} [thisArg] - Object to use as `this` when executing `callback`.\n * @returns {number} Returns index of positively tested element, otherwise -1.\n */\nconst findLastIndex = function findLastIndex(array, callback, thisArg) {\n  const object = toObject(array);\n  assertIsFunction(callback);\n  const iterable = splitIfBoxedBug(object);\n  let index = toLength(iterable.length) - 1;\n\n  if (index < 0) {\n    return -1;\n  }\n\n  while (index > -1) {\n    if (callback.call(thisArg, iterable[index], index, object)) {\n      return index;\n    }\n\n    index -= 1;\n  }\n\n  return -1;\n};\n\nexport default findLastIndex;\n"]}